# name: CICD for Rag app's docker image.

# on:
#   workflow_dispatch:
#   push:
#     branches: [main]

# env:
#   AZURE_CONTAINER_REGISTRY: ragapplication
#   CONTAINER_INSTANCE_NAME: rag
#   RESOURCE_GROUP: first-container-registry
  
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps: 
#       - name: Checkout the repo
#         uses: actions/checkout@v4

#       - name: Set up python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.10.x'
      
#       - name: Setup docker/buildx
#         uses: docker/setup-buildx-action@v3
      
#       - name: Login to azure container registry
#         uses: docker/login-action@v3
#         with: 
#           registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
#           username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
#           password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}
      
#       - name: Build and push docker image to Azure Container Registry
#         uses: docker/build-push-action@v6
#         with: 
#           push: true
#           tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ github.sha }}
#           file: LLMOPS/Dockerfile 
#           build-args:
#             HUGGINGFACEHUB=${{ secrets.HUGGINGFACEHUB_API_TOKEN }}
#             PINECONE=${{ secrets.PINECONE_API_KEY }}
      
#       - name: Deploying in a Azure Container Instance 
#         uses: azure/aci-deploy@v1
#         with:
#           resource-group: ${{ env.RESOURCE_GROUP }}
#           dns-name-label: ${{ env.RESOURCE_GROUP }}${{ github.run_number }}
#           image: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_INSTANCE_NAME }}:${{ github.sha }} 
#           registry-login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io 
#           registry-username: ${{ secrets.CLIENT_ID }}
#           registry-password: ${{ secrets.CLIENT_PASSWORD }}
#           name: deploy-rag
#           location: Central India





  
